{
    "openapi": "3.0.0",
    "info": {
        "title": "Travel Planner API documentation",
        "description": "API Documentation for Travel Planner",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/accommodation": {
            "get": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Get all accommodations for logged in user",
                "description": "Get all accommodations for logged in user",
                "operationId": "get_accommodation",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Create a accommodation for a destination",
                "description": "Create accommodation",
                "operationId": "create_accommodation",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "accommodation_name",
                        "in": "query",
                        "description": "required_with:accommodations | string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkin_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:today",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "checkout_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after:checkin_date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "checkin_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkout_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkin_minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkout_minute",
                        "in": "query",
                        "description": "nnumeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "decimal"
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "string | max:20",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accommodation/update": {
            "post": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Update accommodation",
                "description": "Update accommodation",
                "operationId": "update_accommodation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:accommodations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "accommodation_name",
                        "in": "query",
                        "description": "required_with:accommodations | string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkin_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:today",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "checkout_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after:checkin_date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "checkin_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkout_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkin_minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkout_minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "decimal"
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "string | max:20",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accommodation/delete": {
            "post": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Delete accommodation",
                "description": "Delete accommodation",
                "operationId": "delete_accommodation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:accommodations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/batch/accommodation": {
            "post": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Create multiple accommodation for a destination",
                "description": "Create accommodation",
                "operationId": "batch_create_accommodation",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "accommodation": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "accommodation_name": {
                                                "type": "string"
                                            },
                                            "checkin_time": {
                                                "type": "string"
                                            },
                                            "checkout_time": {
                                                "type": "string"
                                            },
                                            "cost": {
                                                "type": "integer"
                                            },
                                            "booking_id": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accommodation/search": {
            "get": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Find accommodation by city",
                "description": "Find accommodation by city. Generate fake accommodation for city searched.",
                "operationId": "search_accommodation",
                "parameters": [
                    {
                        "name": "city",
                        "in": "query",
                        "description": "required | string",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "description": "User login",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "required",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "required",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User logout",
                "description": "User logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register user",
                "description": "Register user",
                "operationId": "register_user",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "required | string | max:255",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "required | string | max:25 | unique:users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "required | email:rfc,dns | max:255 | unique:users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "required | string | min:8 | confirmed",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "required",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "numeric | digits_between:10,11 | unique:users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "in:MALE,FEMALE,OTHER",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | before:today",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "description": "image | mimes:jpeg, png, jpg, gif, svg | max:2048",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/destination": {
            "get": {
                "tags": [
                    "Destination"
                ],
                "summary": "Get all destinations for logged in user",
                "description": "Get all destinations for logged in user",
                "operationId": "get_destination",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Destination"
                ],
                "summary": "Add a destination for a trip",
                "description": "Add a destination to trip after creation",
                "operationId": "create_destination",
                "parameters": [
                    {
                        "name": "trip_id",
                        "in": "query",
                        "description": "required | exists:trips,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "required | string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:today",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:start_date",
                        "schema": {
                            "type": "date"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/destination/update": {
            "post": {
                "tags": [
                    "Destination"
                ],
                "summary": "Update destination",
                "description": "Update destination",
                "operationId": "update_destination",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:today",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:start_date",
                        "schema": {
                            "type": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/destination/delete": {
            "post": {
                "tags": [
                    "Destination"
                ],
                "summary": "Delete destination",
                "description": "Delete destination",
                "operationId": "delete_destination",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/itinerary": {
            "get": {
                "tags": [
                    "Itinerary"
                ],
                "summary": "Get all itineraries for logged in user",
                "description": "Get all itineraries for logged in user",
                "operationId": "get_itinerary",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Itinerary"
                ],
                "summary": "Create an itinerary for a destination",
                "description": "Create itinerary",
                "operationId": "create_itinerary",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "day",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "schedules": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "hour": {
                                                "type": "integer"
                                            },
                                            "minute": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "cost": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/itinerary/update": {
            "post": {
                "tags": [
                    "Itinerary"
                ],
                "summary": "Update itinerary",
                "description": "Update itinerary",
                "operationId": "update_itinerary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:itineraries,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "day",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "schedules": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "hour": {
                                                "type": "integer"
                                            },
                                            "minute": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "cost": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/itinerary/delete": {
            "post": {
                "tags": [
                    "Itinerary"
                ],
                "summary": "Delete itinerary",
                "description": "Delete itinerary",
                "operationId": "delete_itinerary",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:itineraries,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/itinerary/create": {
            "post": {
                "tags": [
                    "Itinerary"
                ],
                "summary": "Create an itinerary for a destination without schedules",
                "description": "Create only itinerary",
                "operationId": "create_only_itinerary",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "day",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/batch/itinerary": {
            "post": {
                "tags": [
                    "Itinerary"
                ],
                "summary": "Create multiple itineraries for a destination",
                "description": "Create multiple itineraries for a destination",
                "operationId": "batch_create_itinerary",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "itineraries": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "date": {
                                                "type": "string"
                                            },
                                            "schedule": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "activity": {
                                                            "type": "string"
                                                        },
                                                        "cost": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/schedule": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get all schedules for logged in user",
                "description": "Get all schedules for logged in user",
                "operationId": "get_schedule",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Add a schedule for an itinerary",
                "description": "Add schedule",
                "operationId": "create_schedule",
                "parameters": [
                    {
                        "name": "itinerary_id",
                        "in": "query",
                        "description": "required | exists:itineraries,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "required | string | min:1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/schedule/update": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Update schedule",
                "description": "Update schedule",
                "operationId": "update_schedule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:schedules,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "string | min:1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/schedule/delete": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Delete schedule",
                "description": "Delete schedule",
                "operationId": "delete_schedule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:schedules,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transport": {
            "get": {
                "tags": [
                    "Transport"
                ],
                "summary": "Get all transports for logged in user",
                "description": "Get all transports for logged in user",
                "operationId": "get_transport",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transport"
                ],
                "summary": "Create a transport for a destination",
                "description": "Create transport",
                "operationId": "create_transport",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "required | in:FLIGHT,FERRY,BUS,TRAIN,OTHER",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "origin",
                        "in": "query",
                        "description": "required | string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "required | string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "departure_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:today",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "arrival_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:departure_date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "departure_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "arrival_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "departure_minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "arrival_minute",
                        "in": "query",
                        "description": "nnumeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "decimal"
                        }
                    },
                    {
                        "name": "operator",
                        "in": "query",
                        "description": "string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "string | max:20",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transport/update": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "summary": "Update transport",
                "description": "Update transport",
                "operationId": "update_transport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:transports,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "in:FLIGHT,FERRY,BUS,TRAIN,OTHER",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "origin",
                        "in": "query",
                        "description": "string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "departure_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:today",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "arrival_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | after_or_equal:departure_date",
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "departure_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "arrival_hour",
                        "in": "query",
                        "description": "numeric | min:0 | max:23",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "departure_minute",
                        "in": "query",
                        "description": "numeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "arrival_minute",
                        "in": "query",
                        "description": "nnumeric | min:0 | max:59",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "description": "numeric | min:0",
                        "schema": {
                            "type": "decimal"
                        }
                    },
                    {
                        "name": "operator",
                        "in": "query",
                        "description": "string | max:100",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "description": "string | max:20",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transport/delete": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "summary": "Delete transport",
                "description": "Delete transport",
                "operationId": "delete_transport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:transports,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/batch/transport": {
            "post": {
                "tags": [
                    "Transport"
                ],
                "summary": "Create multiple transports for a destination",
                "description": "Create transport",
                "operationId": "batch_create_transport",
                "parameters": [
                    {
                        "name": "destination_id",
                        "in": "query",
                        "description": "required | exists:destinations,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "transport": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "mode": {
                                                "type": "string"
                                            },
                                            "departure_time": {
                                                "type": "string"
                                            },
                                            "arrival_time": {
                                                "type": "string"
                                            },
                                            "origin": {
                                                "type": "string"
                                            },
                                            "destination": {
                                                "type": "string"
                                            },
                                            "cost": {
                                                "type": "integer"
                                            },
                                            "operator": {
                                                "type": "string"
                                            },
                                            "booking_id": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trip": {
            "get": {
                "tags": [
                    "Trip"
                ],
                "summary": "Get all trips for logged in user",
                "description": "Get all trips excluding deleted ones",
                "operationId": "get_trip",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Trip"
                ],
                "summary": "Create trip",
                "description": "Create trip",
                "operationId": "create_trip",
                "parameters": [
                    {
                        "name": "trip_name",
                        "in": "query",
                        "description": "string | max:255",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "origin",
                        "in": "query",
                        "description": "string | max:100",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group_type",
                        "in": "query",
                        "description": "in:SOLO,COUPLE,FAMILY,FRIENDS",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trip_type",
                        "in": "query",
                        "description": "in:WORK,LEISURE",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "destinations": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "location": {
                                                "type": "string"
                                            },
                                            "start_date": {
                                                "type": "string"
                                            },
                                            "end_date": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "trip_banner": {
                                        "description": "image | mimes:jpeg, png, jpg, gif, svg | max:2048",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trip/update": {
            "post": {
                "tags": [
                    "Trip"
                ],
                "summary": "Update trip",
                "description": "Update trip",
                "operationId": "update_trip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:trips",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trip_name",
                        "in": "query",
                        "description": "string | max:255",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "origin",
                        "in": "query",
                        "description": "string | max:100",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group_type",
                        "in": "query",
                        "description": "in:SOLO,COUPLE,FAMILY,FRIENDS",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trip_type",
                        "in": "query",
                        "description": "in:WORK,LEISURE",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "body",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "properties": {
                                "users": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "destinations": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "location": {
                                                "type": "string"
                                            },
                                            "start_date": {
                                                "type": "string"
                                            },
                                            "end_date": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "trip_banner": {
                                        "description": "image | mimes:jpeg, png, jpg, gif, svg | max:2048",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trip/delete": {
            "post": {
                "tags": [
                    "Trip"
                ],
                "summary": "Delete trip",
                "description": "Delete trip",
                "operationId": "delete_trip",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "required | exists:trips,id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/triposo/articles": {
            "post": {
                "tags": [
                    "Triposo"
                ],
                "summary": "Find triposo articles by city",
                "description": "Find triposo articles by city.",
                "operationId": "triposo_articles",
                "parameters": [
                    {
                        "name": "city",
                        "in": "query",
                        "description": "required | string",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user info",
                "description": "Update user info",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "string | max:255",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "string | max:25 | unique:users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email:rfc,dns | max:255 | unique:users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "string | min:8 | confirmed",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "required_with:password",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "numeric | digits_between:10,11 | unique:users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gender",
                        "in": "query",
                        "description": "in:MALE,FEMALE,OTHER",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birth_date",
                        "in": "query",
                        "description": "date_format:Y-m-d | before:today",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "description": "[image | mimes:jpeg, png, jpg, gif, svg | max:2048",
                                        "type": "file",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/search/{query}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Search user",
                "description": "Search users table username, name & email columns",
                "operationId": "user_by_query",
                "parameters": [
                    {
                        "parameter": "query",
                        "name": "query",
                        "in": "path",
                        "allowReserved": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/find/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Find user",
                "description": "Get user by id",
                "operationId": "user_by_id",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "allowReserved": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true,
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/checkavailability": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Find user",
                "description": "Check username or email availability",
                "operationId": "username_email_availability",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "required_without:email | string | exists:users",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "required_without:username | email | exists:users",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Error"
                    }
                },
                "deprecated": true
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}